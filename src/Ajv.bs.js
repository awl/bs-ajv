// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function compile(schema, t) {
  var v = t.compile(schema);
  return (function (json) {
      var $$null$1 = null;
      var res = Curry._5(v, json, $$null$1, $$null$1, $$null$1, $$null$1);
      var match = Js_json.classify(res);
      if (typeof match === "number") {
        switch (match) {
          case 0 : 
              return /* `Invalid */[
                      144245463,
                      v.errors
                    ];
          case 1 : 
              return /* Valid */-991566628;
          case 2 : 
              return Pervasives.failwith("invalid_validation_result");
          
        }
      } else {
        return Pervasives.failwith("invalid_validation_result");
      }
    });
}

function getKeyword(name, ajv) {
  var match = Js_json.classify(ajv.getKeyword(name));
  if (typeof match === "number") {
    switch (match) {
      case 0 : 
          return /* Unknown */785140586;
      case 1 : 
          return /* Exists */-193687044;
      default:
        return Pervasives.failwith("unexpected_keyword_response");
    }
  } else if (match.tag === 2) {
    return /* `Keyword */[
            189689545,
            match[0]
          ];
  } else {
    return Pervasives.failwith("unexpected_keyword_response");
  }
}

exports.compile = compile;
exports.getKeyword = getKeyword;
/* No side effect */
